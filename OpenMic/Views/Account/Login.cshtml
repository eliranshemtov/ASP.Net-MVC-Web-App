@using OpenMic.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<table>
    <td>
        <div class="loginform">
        <h2>@ViewBag.Title.</h2>
        
            <div class="row">
                <div class="col-md-8">
                    <section id="loginForm">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>Who are you, man?</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Log in" class="btn btn-default" />
                                </div>
                            </div>
                            <p>
                                @Html.ActionLink("Register as a new user", "Register")
                            </p>
                            @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
                        }
                    </section>
                </div>
            </div>
    </td>
    
    <td>
        <div class="YourMic">
            <p class="shadow">The mic is yours!</p>

            <!--  HTML5 Canvas !!!-->
            <canvas id="micCanvas" width="350" height="350"></canvas>
            <script>
                var canvas = document.getElementById('micCanvas');
                var context = canvas.getContext('2d');
                var imageObj = new Image();

                imageObj.onload = function () {
                    context.drawImage(imageObj, 60, 0);
                };
                imageObj.src = "/Content/Images/microphone.gif";
            </script>
        </div>
    </td>
    <!-- END OF HTML5 Canvas !!!-->
    </div>
</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}