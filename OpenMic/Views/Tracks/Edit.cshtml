@model OpenMic.Models.Track

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.DisplayTextFor(model => model.Artists.Name)'s Track</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Date, new
           {
               htmlAttributes = new
               {
                   @Value = Model.Date.ToString("MM/dd/yyyy"),
                   @class = "form-control"
               },
           })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>












        <div class="dropdown">
            <div class="form-group">
                @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Genre, new SelectList(
                  new List<Object>{
                       new { value = "Rock" , text = "Rock"  },
                       new { value = "Pop" , text = "Pop" },
                       new { value = "Classical" , text = "Classical"},
                       new { value = "Jazz" , text = "Jazz"},
                       new { value = "Folk" , text = "Folk"},
                       new { value = "Alternative" , text = "Alternative"}}, "value", "text", 2))
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

